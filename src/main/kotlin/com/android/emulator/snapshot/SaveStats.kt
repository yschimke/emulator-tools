// Code generated by Wire protocol buffer compiler, do not edit.
// Source: emulator_snapshot.SaveStats in snapshot.proto
package com.android.emulator.snapshot

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_2
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

class SaveStats(
  /**
   * Type of save
   * 0: non-incremental
   * 1: incremental
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  @JvmField
  val incremental: Int? = null,
  /**
   * Time taken to save.
   */
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  @JvmField
  val duration: Long? = null,
  /**
   * How many changed bytes in RAM.
   */
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  @JvmField
  val ram_changed_bytes: Long? = null,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<SaveStats, SaveStats.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.incremental = incremental
    builder.duration = duration
    builder.ram_changed_bytes = ram_changed_bytes
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is SaveStats) return false
    if (unknownFields != other.unknownFields) return false
    if (incremental != other.incremental) return false
    if (duration != other.duration) return false
    if (ram_changed_bytes != other.ram_changed_bytes) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + incremental.hashCode()
      result = result * 37 + duration.hashCode()
      result = result * 37 + ram_changed_bytes.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (incremental != null) result += """incremental=$incremental"""
    if (duration != null) result += """duration=$duration"""
    if (ram_changed_bytes != null) result += """ram_changed_bytes=$ram_changed_bytes"""
    return result.joinToString(prefix = "SaveStats{", separator = ", ", postfix = "}")
  }

  fun copy(
    incremental: Int? = this.incremental,
    duration: Long? = this.duration,
    ram_changed_bytes: Long? = this.ram_changed_bytes,
    unknownFields: ByteString = this.unknownFields
  ): SaveStats = SaveStats(incremental, duration, ram_changed_bytes, unknownFields)

  class Builder : Message.Builder<SaveStats, Builder>() {
    @JvmField
    var incremental: Int? = null

    @JvmField
    var duration: Long? = null

    @JvmField
    var ram_changed_bytes: Long? = null

    /**
     * Type of save
     * 0: non-incremental
     * 1: incremental
     */
    fun incremental(incremental: Int?): Builder {
      this.incremental = incremental
      return this
    }

    /**
     * Time taken to save.
     */
    fun duration(duration: Long?): Builder {
      this.duration = duration
      return this
    }

    /**
     * How many changed bytes in RAM.
     */
    fun ram_changed_bytes(ram_changed_bytes: Long?): Builder {
      this.ram_changed_bytes = ram_changed_bytes
      return this
    }

    override fun build(): SaveStats = SaveStats(
      incremental = incremental,
      duration = duration,
      ram_changed_bytes = ram_changed_bytes,
      unknownFields = buildUnknownFields()
    )
  }

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<SaveStats> = object : ProtoAdapter<SaveStats>(
      FieldEncoding.LENGTH_DELIMITED, 
      SaveStats::class, 
      "type.googleapis.com/emulator_snapshot.SaveStats", 
      PROTO_2, 
      null
    ) {
      override fun encodedSize(value: SaveStats): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.UINT32.encodedSizeWithTag(1, value.incremental)
        size += ProtoAdapter.UINT64.encodedSizeWithTag(2, value.duration)
        size += ProtoAdapter.UINT64.encodedSizeWithTag(3, value.ram_changed_bytes)
        return size
      }

      override fun encode(writer: ProtoWriter, value: SaveStats) {
        ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.incremental)
        ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.duration)
        ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.ram_changed_bytes)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): SaveStats {
        var incremental: Int? = null
        var duration: Long? = null
        var ram_changed_bytes: Long? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> incremental = ProtoAdapter.UINT32.decode(reader)
            2 -> duration = ProtoAdapter.UINT64.decode(reader)
            3 -> ram_changed_bytes = ProtoAdapter.UINT64.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return SaveStats(
          incremental = incremental,
          duration = duration,
          ram_changed_bytes = ram_changed_bytes,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: SaveStats): SaveStats = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
