// Code generated by Wire protocol buffer compiler, do not edit.
// Source: waterfall.Message in waterfall.proto
package com.google.waterfall

import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

class Message(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.OMIT_IDENTITY
  )
  @JvmField
  val payload: ByteString = ByteString.EMPTY,
  unknownFields: ByteString = ByteString.EMPTY
) : com.squareup.wire.Message<Message, Message.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.payload = payload
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is Message) return false
    if (unknownFields != other.unknownFields) return false
    if (payload != other.payload) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + payload.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """payload=$payload"""
    return result.joinToString(prefix = "Message{", separator = ", ", postfix = "}")
  }

  fun copy(payload: ByteString = this.payload, unknownFields: ByteString = this.unknownFields):
      Message = Message(payload, unknownFields)

  class Builder : com.squareup.wire.Message.Builder<Message, Builder>() {
    @JvmField
    var payload: ByteString = ByteString.EMPTY

    fun payload(payload: ByteString): Builder {
      this.payload = payload
      return this
    }

    override fun build(): Message = Message(
      payload = payload,
      unknownFields = buildUnknownFields()
    )
  }

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<Message> = object : ProtoAdapter<Message>(
      FieldEncoding.LENGTH_DELIMITED, 
      Message::class, 
      "type.googleapis.com/waterfall.Message", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: Message): Int {
        var size = value.unknownFields.size
        if (value.payload != ByteString.EMPTY) size += ProtoAdapter.BYTES.encodedSizeWithTag(1,
            value.payload)
        return size
      }

      override fun encode(writer: ProtoWriter, value: Message) {
        if (value.payload != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 1,
            value.payload)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): Message {
        var payload: ByteString = ByteString.EMPTY
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> payload = ProtoAdapter.BYTES.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return Message(
          payload = payload,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: Message): Message = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
